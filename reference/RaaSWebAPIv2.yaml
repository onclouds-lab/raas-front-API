openapi: 3.0.1
tags:
  - name: facility
  - name: robot
  - name: map
  - name: waypoint
  - name: path
  - name: owner
  - name: rawRobot
info:
  title: RaaSWebAPIv2
  version: '1.0'
  contact:
    name: onClouds
  description: rass APiv2
servers:
  - url: 'http://localhost:3000'
paths:
  /maps:
    get:
      summary: Your GET endpoint
      tags:
        - map
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/mapMeta.v2.json
                required:
                  - pagenate
                  - data
      operationId: getMaps
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: 検索文字列
        - schema:
            type: number
          in: query
          name: page
          description: ページ数
        - schema:
            type: number
          in: query
          name: limit
          description: 表示数
      description: 地図一覧を取得
    parameters: []
    post:
      summary: add a new map
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapMeta.v2.json
      description: 新規に地図を登録する
      operationId: createMap
      tags:
        - map
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: createMapType
              properties:
                param:
                  $ref: ../models/mapParams.v2.json
                pgm:
                  type: string
                  description: バイナリ型のpgmファイル
                  format: binary
              required:
                - param
                - pgm
        description: ''
  '/maps/{mapId}':
    description: mapの取得
    get:
      summary: get MapMeta
      tags:
        - map
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapMeta.v2.json
      operationId: getMap
      description: Idを指定してMapの取得
    parameters:
      - schema:
          type: string
        name: mapId
        in: path
        required: true
    delete:
      summary: ''
      operationId: deleteMap
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: map 削除
      tags:
        - map
    put:
      summary: update a map
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapMeta.v2.json
      description: 地図の内容を変更
      parameters: []
      operationId: updateMap
      tags:
        - map
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/mapParams.v2.json
        description: ''
  '/maps/{mapId}/pgm':
    parameters:
      - schema:
          type: string
        name: mapId
        in: path
        required: true
    get:
      summary: get pgm url
      tags:
        - map
      responses:
        '200':
          description: OK
      operationId: getPGMmapURL
      description: 詳細説明なし
    put:
      summary: ''
      operationId: putPGMmap
      responses:
        '200':
          description: OK
      tags:
        - map
      description: 詳細説明なし
  '/maps/{mapId}/cost':
    parameters:
      - schema:
          type: string
        name: mapId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - map
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              examples:
                '0000000000000001':
                  value: /resource/bitmap/chinokyoten1f.png
                '0000000000000002':
                  value: /resource/bitmap/chinokyoten2f.png
                '0000000000000003':
                  value: /resource/bitmap/chinokyoten3f.png
      operationId: getCostmapURL
      description: 詳細説明なし
    put:
      summary: ''
      operationId: putCostmap
      responses:
        '200':
          description: OK
      description: 詳細説明なし
      tags:
        - map
  /facilities:
    get:
      summary: GET Facilities
      tags:
        - facility
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/facility.json
              examples:
                example-1:
                  value:
                    pagenate:
                      current_page: 0
                      from: 0
                      to: 0
                      first_page_url: string
                      last_page_url: string
                      next_page_url: string
                      prev_page_url: string
                      path: string
                      last_page: 0
                      per_page: 0
                      total: 0
                    data:
                      - id: '0000000000000001'
                        registDate: '1964-02-02T18:25:36.294Z'
                        updateDate: '2019-11-20T16:31:46.928Z'
                        name: chinokyoten
                        maps:
                          - floorNum: 0
                            mapMeta:
                              id: '0000000000000001'
                              name: chinokyoten1
                              description: ''
                              resolution: 0.05
                              origin:
                                x: -100
                                'y': -100
                              negate: false
                              occupied_thresh: 0.65
                              free_thresh: 0.196
                              size:
                                width: 4000
                                height: 4000
                              owner:
                                id: '0000000000000001'
                                name: veniam
                                owned_robot: []
                                owned_map: []
                              pgm_link: 'http://localhost:4010/maps/0000000000000001/pgm?__example=0000000000000001'
                              costmap_link: 'http://localhost:4010/maps/0000000000000001/cost?__example=0000000000000001'
                              yaw: 100
                          - floorNum: 1
                            mapMeta:
                              id: '0000000000000002'
                              name: chinokyoten2
                              description: ''
                              resolution: 0.05
                              origin:
                                x: -100
                                'y': -80
                              negate: false
                              occupied_thresh: 0.65
                              free_thresh: 0.196
                              size:
                                width: 4000
                                height: 4000
                              owner:
                                id: '0000000000000001'
                                name: veniam
                                owned_robot: []
                                owned_map: []
                              pgm_link: 'http://localhost:4010/maps/0000000000000002/pgm?__example=0000000000000002'
                              costmap_link: 'http://localhost:4010/maps/0000000000000002/cost?__example=0000000000000002'
                              yaw: 0
                          - floorNum: 2
                            mapMeta:
                              id: '0000000000000003'
                              name: chinokyoten3
                              description: ''
                              resolution: 0.05
                              origin:
                                x: -130
                                'y': -70
                              negate: false
                              occupied_thresh: 0.65
                              free_thresh: 0.196
                              size:
                                width: 4000
                                height: 4000
                              owner:
                                id: '0000000000000001'
                                name: veniam
                                owned_robot: []
                                owned_map: []
                              pgm_link: 'http://localhost:4010/maps/0000000000000003/pgm?__example=0000000000000003'
                              costmap_link: 'http://localhost:4010/maps/0000000000000003/cost?__example=0000000000000003'
                              yaw: 100
                        floor: 3
                        elevators:
                          - id: '0000000000000010'
                            position:
                              x: -11
                              'y': 12
                              z: 10
                            stopFloor:
                              - 0
                              - 1
                              - 2
                            supportTypes:
                              id: '0000000000000001'
                              size:
                                height: 2.5
                                width: 1.5
                                deepth: 1.5
                              radius: 0
                              max_speed: 2
                              'max_acceleration ': 2
                              max_angular_speed: 1
                              maxVel: 5
                              minRad: 1
                        robots:
                          - id: '0000000000000001'
                            name: robot-1
                            init_map_id: '0000000000000002'
                            init_slam_map_version: '1'
                            specification:
                              id: '0000000000000001'
                              name: 型番1
                              radius: 2
                              max_speed: 1.5
                              'max_acceleration ': 2
                              max_angular_speed: 1
                              description: description
                              type:
                                - id: '0000000000000001'
                                  type: normal
                            owner:
                              id: '0000000000000001'
                              name: oci
                              owned_robot: []
                              owned_map: []
                          - id: '0000000000000002'
                            name: robot-2
                            init_map_id: '0000000000000003'
                            init_slam_map_version: '1'
                            specification:
                              id: '0000000000000001'
                              name: 型番1
                              radius: 2
                              max_speed: 1.5
                              'max_acceleration ': 2
                              max_angular_speed: 1
                              description: description
                              type:
                                - id: '0000000000000001'
                                  type: normal
                            owner:
                              id: '0000000000000001'
                              name: oci
                              owned_robot: []
                              owned_map: []
                          - id: '0000000000000003'
                            name: robot-3
                            init_map_id: '0000000000000001'
                            init_slam_map_version: '1'
                            specification:
                              id: '0000000000000001'
                              name: 型番1
                              radius: 2
                              max_speed: 1.5
                              'max_acceleration ': 2
                              max_angular_speed: 1
                              description: description
                              type:
                                - id: '0000000000000001'
                                  type: normal
                            owner:
                              id: '0000000000000001'
                              name: oci
                              owned_robot: []
                              owned_map: []
      operationId: getFacilities
      description: 詳細説明なし
    parameters: []
    post:
      summary: post facility
      operationId: createFacility
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/facility.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/facilityParams.v1.json
      description: Facilityの作成
      tags:
        - facility
  '/facilities/{facilityId}':
    parameters:
      - schema:
          type: string
        name: facilityId
        in: path
        required: true
    get:
      summary: get Facility
      tags:
        - facility
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/facility.json
      operationId: getFacility
      description: 詳細説明なし
    delete:
      summary: ''
      operationId: deleteFacility
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: facilityの削除
      tags:
        - facility
    put:
      summary: Update a Facility
      operationId: updateFacility
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/facility.json
      description: facilityの更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/facilityParams.v1.json
      tags:
        - facility
  /waypoints:
    get:
      summary: get waypoints
      tags:
        - waypoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/waypoint.v2.json
                required:
                  - pagenate
                  - data
              examples:
                example-1:
                  value:
                    pagenate:
                      current_page: 0
                      from: 0
                      to: 0
                      first_page_url: string
                      last_page_url: string
                      next_page_url: string
                      prev_page_url: string
                      path: string
                      last_page: 0
                      per_page: 0
                      total: 0
                    data:
                      - id: '0000000000000101'
                        name: Entrance
                        facility:
                          id: '0000000000000001'
                        owner:
                          id: '0001000000000001'
                        action:
                          - string
                        floor: 0
                        point:
                          x: -18.7
                          'y': 26.4
                          z: 0
                        attributes:
                          - evpoint
                      - id: '0000000000000102'
                        name: Laboratory
                        facility:
                          id: '0000000000000001'
                        owner:
                          id: '0001000000000001'
                        action:
                          - string
                        floor: 1
                        point:
                          x: 3.8
                          'y': 32
                          z: 0
                        attributes: []
                      - id: '0000000000000103'
                        name: test1
                        facility:
                          id: '0000000000000001'
                        owner:
                          id: '0001000000000001'
                        action:
                          - string
                        floor: 2
                        point:
                          x: -100
                          'y': 100
                          z: 0
                        attributes: []
                      - id: '0000000000000104'
                        name: center
                        facility:
                          id: '0000000000000002'
                        owner:
                          id: '0001000000000001'
                        action:
                          - string
                        floor: 1
                        point:
                          x: 0
                          'y': 0
                          z: 0
                        attributes: []
      operationId: getWaypoints
      description: waypointの一覧を取得
      parameters:
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: integer
          in: query
          name: limit
    post:
      summary: add new waypoint
      operationId: createWaypoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/waypoint.v2.json
      description: waypointの追加
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/waypointParams.v2.json
      tags:
        - waypoint
  '/waypoints/{waypointID}':
    parameters:
      - schema:
          type: string
        name: waypointID
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - waypoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/waypoint.v2.json
      operationId: getWaypoint
      description: 指定されたwaypointIDのwaypointを返す
      parameters: []
    put:
      summary: ''
      operationId: updateWaypoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/waypoint.v2.json
      description: waypoint 変更
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/waypointParams.v2.json
      tags:
        - waypoint
    delete:
      summary: ''
      operationId: deleteWaypoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: waypointの削除
      tags:
        - waypoint
  /autopath:
    post:
      summary: get auto generate path
      responses:
        '200':
          description: |-
            OK
            methodは'move'で返ってくる
          content:
            application/json:
              schema:
                $ref: ../models/roboOperation.json
              examples:
                example-1:
                  value:
                    method: move
                    robotSpecifications:
                      - id: string
                    argment:
                      - floor: 0
                        point:
                          x: 0
                          'y': 0
                          z: 0
                        attributes:
                          - string
      description: 自動生成したpathを取得
      operationId: generatePath
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: GeneratePathType
              description: waypoint array
              properties:
                points:
                  type: array
                  items:
                    $ref: ../models/common/floorAttribute.json
                algorithms:
                  type: array
                  items:
                    $ref: ../models/pathAlgorithm.v1.json
                robot:
                  type: object
                  required:
                    - specification
                  properties:
                    specification:
                      $ref: ../models/common/idObject.v1.json
              required:
                - points
                - algorithms
                - robot
            examples: {}
        description: ''
      tags:
        - path
      parameters:
        - schema:
            type: string
          in: query
          name: facility_id
          description: Pathを生成するfacilityのID
  /owners:
    get:
      summary: Your GET endpoint
      tags:
        - owner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/owner.v1.json
              examples:
                example-1:
                  value:
                    pagenate:
                      current_page: 0
                      from: 0
                      to: 0
                      first_page_url: string
                      last_page_url: string
                      next_page_url: string
                      prev_page_url: string
                      path: string
                      last_page: 0
                      per_page: 0
                      total: 0
                    data:
                      - id: '0001000000000001'
                        name: sample owner
                        owned_robot:
                          - string
                        owned_map:
                          - string
      operationId: getOwners
      description: Ownerの一覧を取得
      parameters:
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: integer
          in: query
          name: limit
  /paths:
    get:
      summary: get all paths
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/path.v1.json
              examples:
                example-1:
                  value:
                    data:
                      - id: 0123456789aaaaaa
                        name: path-1
                        facility:
                          id: '0000000000000001'
                        operations:
                          - method: move
                            arguments:
                              - floor: 1
                                point:
                                  x: -18.69999999999999
                                  'y': 26.400000000000006
                                  z: 0
                                attributes: []
                              - floor: 1
                                point:
                                  x: 12
                                  'y': 15
                                  z: 0
                                attributes: []
                        owner:
                          id: 0123456789aaabbb
                      - id: '0000000000000001'
                        name: path-01212
                        facility:
                          id: '0000000000000001'
                        operations:
                          - method: move
                            arguments:
                              - floor: 1
                                point:
                                  x: -2.4499999999999886
                                  'y': 4.3500000000000085
                                  z: 0
                                attributes: []
                              - floor: 1
                                point:
                                  x: 11.5
                                  'y': -5
                                  z: 0
                                attributes: []
                        owner:
                          id: 0123456789aaabbb
                      - id: '0000000000000003'
                        name: path-03
                        facility:
                          id: '0000000000000001'
                        operations:
                          - method: move
                            arguments:
                              - floor: 1
                                point:
                                  x: -85.5
                                  'y': 4.35
                                  z: 0
                                attributes: []
                              - floor: 1
                                point:
                                  x: 61.5
                                  'y': 4
                                  z: 0
                                attributes: []
                        owner:
                          id: 0123456789aaabbb
                      - id: '0000000000000004'
                        name: path-04
                        facility:
                          id: '0000000000000001'
                        operations:
                          - method: move
                            arguments:
                              - floor: 1
                                point:
                                  x: -85.5
                                  'y': -85.35
                                  z: 0
                                attributes: []
                              - floor: 1
                                point:
                                  x: 61.5
                                  'y': 64
                                  z: 0
                                attributes: []
                        owner:
                          id: 0123456789aaabbb
      operationId: getPaths
      description: pathの一覧を取得
      tags:
        - path
      parameters:
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: integer
          in: query
          name: limit
    post:
      summary: add new path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/path.v1.json
      description: pathの追加
      operationId: createPath
      tags:
        - path
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/pathParams.v1.json
  '/paths/{pathID}':
    parameters:
      - schema:
          type: string
        name: pathID
        in: path
        required: true
    get:
      summary: get a Path
      tags:
        - path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/path.v1.json
      operationId: getPath
      description: Pathの取得
    put:
      summary: update a path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/path.v1.json
      description: Pathの変更
      operationId: updatePath
      tags:
        - path
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/pathParams.v1.json
    delete:
      summary: delete a path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Pathの削除
      operationId: deletePath
      tags:
        - path
  '/robots/{robotID}':
    parameters:
      - schema:
          type: string
        name: robotID
        in: path
        required: true
    get:
      summary: get one robot info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/robot.v1.json
      description: |
        ロボットDBレコード取得
        get one robot DB record
      parameters: []
      operationId: getRobot
      tags:
        - robot
    put:
      summary: update a robot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/robot.v1.json
      description: |-
        ロボットDB変更
        update robot DB
      parameters: []
      operationId: updateRobot
      tags:
        - robot
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/robotParams.v1.json
        description: ''
    delete:
      summary: delete a robot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: |-
        ロボットDB削除
        delete a robot form robot DB
      operationId: deleteRobot
      tags:
        - robot
  /robots:
    get:
      summary: get robots
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/robot.v1.json
              examples: {}
      description: |-
        ロボットDB一覧取
        get all robot DB record

        絞り込みはbodyで
        TODO: ページング
      parameters:
        - schema:
            type: number
            default: 1
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: sort
      operationId: getRobots
      tags:
        - robot
    post:
      summary: add a new robot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/robot.v1.json
      operationId: createRobot
      description: |-
        ロボットDB追加
        add new robot to robot DB
      tags:
        - robot
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/robotParams.v1.json
  '/rawRobot/{robotID}':
    parameters:
      - schema:
          type: string
        name: robotID
        in: path
        required: true
    get:
      summary: get robot infos
      description: |-
        現在のロボット情報取得
        get robot infomation
      operationId: getRawRobot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/rawRobot.v1.json
              examples:
                '0000000000000001':
                  value:
                    id: '0000000000000001'
                    name: test_robot
                    current_map_id: '0000000000000001'
                    since: '2020-01-01T01:01:01Z'
                    IP: 100.100.100.001
                    map:
                      id: '0000000000000002'
                    point:
                      x: 7.7
                      'y': -35
                      z: 0
                    battery: 50
                    task:
                      id: '123'
                      name: idoling
                '0000000000000002':
                  value:
                    id: '0000000000000002'
                    name: ロボット２３号
                    current_map_id: '0000000000000001'
                    since: '2020-01-01T01:01:01Z'
                    IP: 100.100.100.002
                    map:
                      id: '0000000000000003'
                    point:
                      x: -25
                      'y': -15.9
                      z: 0
                    battery: 80
                    task:
                      id: '124'
                      name: offline
                '0000000000000003':
                  value:
                    id: '0000000000000003'
                    name: ロボット３号
                    since: '2019-08-24T14:15:22Z'
                    IP: 100.100.100.003
                    battery: 20
                    owner:
                      id: '0000000000000001'
                    map:
                      id: '0000000000000001'
                    point:
                      x: -2
                      'y': -15
                      z: 0
      tags:
        - rawRobot
  /robotTypes:
    get:
      summary: getRobotTypes
      tags:
        - robot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/robotType.json
      operationId: getRobotTypes
      parameters: []
      description: ''
  '/robotTypes/{robotType_id}':
    parameters:
      - schema:
          type: string
        name: robotType_id
        in: path
        required: true
    get:
      summary: getRobotType
      tags:
        - robot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/robotType.json
      operationId: getRobotType
  /robotSpecification:
    get:
      summary: getRobotSpecification
      tags:
        - robot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/common/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/robotSpecification.json
      operationId: getRobotSpecifications
    parameters: []
  '/robotSpecification/{robotModel_id}':
    parameters:
      - schema:
          type: string
        name: robotModel_id
        in: path
        required: true
    get:
      summary: getRobotSpecification
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/robotSpecification.json
      operationId: getRobotSpecification
  '/sendOperation/{robot_id}':
    parameters:
      - schema:
          type: string
        name: robot_id
        in: path
        required: true
    post:
      summary: sendOperation
      tags:
        - rawRobot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: operateRobot
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: ../models/roboOperation.json
components:
  schemas: {}
  responses: {}
  parameters:
    map_id:
      name: map_id
      in: path
      required: true
      schema:
        type: string
        example: '0000000000000013'
        minLength: 16
        maxLength: 16
        pattern: '[0-9]{16}'
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
      description: ページ数
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
      description: 表示数
    facility_id:
      name: facility_id
      in: path
      required: true
      schema:
        type: string
      description: 施設のID
    elevator_id:
      name: elevator_id
      in: path
      required: true
      schema:
        type: string
      description: エレベーターのID
  examples:
    pgm_linkURL:
      value:
        description: Example shared example
        type: object
        properties:
          url:
            type: string
            example: 'http://localhost/pgmimage.pgm'
        required:
          - url
    costmap_linkURL:
      value:
        description: Example shared example
        type: object
        properties:
          url:
            type: string
            example: 'http://localhost/costmapimage.png'
        required:
          - url
